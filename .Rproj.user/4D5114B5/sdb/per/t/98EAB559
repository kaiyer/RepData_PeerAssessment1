{
    "contents" : "library(dplyr)\nlibrary(ggplot2)\nlibrary(lattice)\nlibrary(foreach)\n# load data\ndata <- read.table(unz(\"activity.zip\", \"activity.csv\"), nrows=17570, header=T, quote=\"\\\"\", sep=\",\")\ndata$date <- as.Date(data$date)\n# drop the NA's\ndata.df <- data[!is.na(data$steps),]\n# summary\nsummary(data.df)\n# now summarize data\n# apply group_by and compute daily total steps\nby_date.df <- group_by(data.df, date)\nby_date.summary <- summarise(by_date.df, totsteps=sum(steps),nr=length(interval))\n# plot histogram of ata\nhist(by_date.summary$totsteps,main=\"Histogram of total daily steps\",xlab=\"total daily steps\", ylab=\"count\")\n# mean and median of daily total steps\nall_data.summary <- summarise(by_date.summary, mean.steps = mean(totsteps),median.steps=median(totsteps))\n# now create dataframe for daily activity pattern and plot the data\nby_interval.df <- group_by(data.df, interval)\nby_interval.summary <- summarise(by_interval.df, mean.steps=mean(steps))\nplot(by_interval.summary$interval,by_interval.summary$mean.steps, type='l', main=\"steps vs intervals\", xlab= \"interval\" , ylab=\"mean steps\")# find the max value of steps during the day and then find the interval at which it occurs\nmaxsteps <- max(by_interval.summary$mean.steps)\nmaxsteps\nby_interval.summary[by_interval.summary$mean.steps==maxsteps,]$interval\nmaxinterval <- by_interval.summary[by_interval.summary$mean.steps==maxsteps,]$interval\nmaxinterval\nintervalnum <- maxinterval/5 + 1\nintervalnum\n# find number of NA's\nsummary(data)\nna.df <- data[is.na(data$steps),]\n# now backfill NA's with mean of by_interval.df\ninterval2steps <- function(interval) {\n  by_interval.summary[by_interval.summary$interval==interval,]$mean.steps\n}\nbackfill_na <- function(interval) {\n  na.df[na.df$interval==interval,]$steps <<- interval2steps(interval)\n  0\n}\nintervals.df <- unique(by_interval.df$interval)\n\nforeach(i=1:length(intervals.df)) %do% backfill_na(intervals.df[i])\nbackfilled.df <- rbind(na.df, data.df)\n# now create a table by date\nbackfilled_by_date.df <- group_by(backfilled.df, date)\nbackfilled_by_date.summary <- summarise(backfilled_by_date.df, totsteps=sum(steps),nr=length(interval))\n# plot histogram of data\nhist(backfilled_by_date.summary$totsteps,xlab=\"total daily steps\", ylab=\"count\")\n# mean and median of daily total steps\nbackfilled_all_data.summary <- summarise(backfilled_by_date.summary, mean.steps = mean(totsteps),median.steps=median(totsteps))\n# now create dataframe for weekend/weekday activity pattern\nbackfilled_by_date.df$wend <- as.factor(ifelse(weekdays(backfilled_by_date.df$date) %in% c(\"Saturday\",\"Sunday\"), \"weekend\", \"weekday\")) \n# compute data frame with summary by interval \nwday_by_interval.df <- group_by(backfilled_by_date.df[backfilled_by_date.df$wend==\"weekday\",], interval)\nwday_by_interval.summary <- summarise(wday_by_interval.df, mean.steps=mean(steps))\nwday_by_interval.summary$wend <- as.factor(\"weekday\")\nmean(wday_by_interval.summary$mean.steps)\n\nwend_by_interval.df <- group_by(backfilled_by_date.df[backfilled_by_date.df$wend==\"weekend\",], interval)\nwend_by_interval.summary <- summarise(wend_by_interval.df, mean.steps=mean(steps))\nwend_by_interval.summary$wend <- as.factor(\"weekend\")\nmean(wend_by_interval.summary$mean.steps)\n\nactivity_by_interval.summary <- rbind(wday_by_interval.summary,wend_by_interval.summary)\n\nxyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUE,ylab=\"Number of Steps\", xlab=\"Interval\", type='l')\n",
    "created" : 1426362579895.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2692679955",
    "id" : "98EAB559",
    "lastKnownWriteTime" : 1426447677,
    "path" : "~/GitHub/RepData_PeerAssessment1/peer1_test.R",
    "project_path" : "peer1_test.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}