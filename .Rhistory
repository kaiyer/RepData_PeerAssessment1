data <- read.table(unz("activity.zip", "activity.csv"), nrows=17570, header=T, quote="\"", sep=",")
View(data)
summary(data)
data.df <- data[!is.na(data$steps),]
summary(data.df)
library("dplyr", lib.loc="~/R/win-library/3.1")
group_by(data.df, date)
summarise(data.df, totsteps=sum(steps), numintervals=count(interval))
group_by(data.df, date)
by_date.df <- group_by(data.df, date)
summarise(by_date.df, totsteps=sum(steps), numintervals=count(interval))
View(by_date.df)
class(by_date.df$interval)
class(by_date.df$steps)
summarise(by_date.df, totsteps=sum(steps))
count
count(data.df$interval)
count(data.df$interval,nrow)
summarise(by_date.df, totsteps=sum(steps),nrow)
summarise(by_date.df, totsteps=sum(steps),sum(interval))
rows(data.df)
nrow
summarise(by_date.df, totsteps=sum(steps),nrow(interval))
summarise(by_date.df, totsteps=sum(steps),nr=nrow(interval))
summarise(by_date.df, totsteps=sum(steps))
nrow(data.df$interval)
nrows(data.df$interval)
nrows
nrow
dim(data.df$interval)
length(data.df$interval)
summarise(by_date.df, totsteps=sum(steps),nr=length(interval))
library(ddplyr)
# load data
data <- read.table(unz("activity.zip", "activity.csv"), nrows=17570, header=T, quote="\"", sep=",")
# drop the NA's
data.df <- data[!is.na(data$steps),]
# summary
summary(data.df)
# now summarize data
# apply group by and
by_date.df <- group_by(data.df, date)
by_date.summary <- summarise(by_date.df, totsteps=sum(steps),nr=length(interval))
View(by_date.summary)
hist(by_date.summary$totsteps)
summarize(by_date.summary, mean.steps = mean(totsteps),median.steps=median(totsteps))
summarize(by_date.summary, mean.steps = mean(totsteps),median.steps=median(totsteps))
by_interval.df <- summarise(by_date.df, mean.steps=mean(totsteps))
by_interval.df <- summarise(by_date.df, mean.steps=mean(steps))
View(by_interval.df)
by_interval.df <- group_by(data.df, interval)
by_interval.summary <- summarise(by_interval.df, mean.steps=mean(steps))
plot(by_interval.df)
View(by_interval.summary)
plot(by_interval.df$interval,by_interval.df$mean.steps, type='l' )
plot(by_interval.summary$interval,by_interval.summary$mean.steps, type='l' )
plot(by_interval.summary$interval,by_interval.summary$mean.steps, type='l', xlab= "interval" , ylab="mean steps")
summary(data.df)
summary(data)
na.df <- data[is.na(data$steps),]
na.df
by_interval.df[by_interval.df$interval==0,]
by_interval.sumary[by_interval.df$interval==0,]
by_interval.summary[by_interval.summary$interval==0,]
by_interval.summary[by_interval.summary$interval==0,]$mean.steps
interval2steps <- function(interval) {
by_interval.summary[by_interval.summary$interval==interval,]$mean.steps
}
interval2steps(0)
interval2steps(1)
interval2steps(5)
View(na.df)
backfill_na <- function(interval) {
na.df[na.df$interval==interval,]$steps <- interval2steps(interval)
}
uniq(by_interval.df$interval)
unique(by_interval.df$interval)
sapply(unique(by_interval.df$interval),backfill_na)
View(na.df)
na.df[na.df$interval==0,]$steps
na.df[na.df$interval==0,]$steps <- interval2steps(0)
na.df[na.df$interval==0,]$steps
intervals.df <- unique(by_interval.df$interval)
intervals.df
sapply(intervals.df,backfill_na)
apply(intervals.df,backfill_na)
tapply(intervals.df,backfill_na)
intervals.df
intervals.df[0]
intervals.df[1]
library("foreach", lib.loc="~/R/win-library/3.1")
foreach(i=intervals.df) %do% sqrt(i)
dim(itervals.df)
intervals.df <- unique(by_interval.df$interval)
dim(itervals.df)
intervals.df
length(intervals.df)
foreach(i=1:length(intervals.df) %do% sqrt(intervals.df[i])
)
foreach(i=1:length(intervals.df) %do% intervals.df[i]
)
foreach(i=1:length(intervals.df) %do% sqrt(i)
)
foreach(i=1:length(intervals.df)) %do% backfill_na(intervals.df[i])
na.df
head(na.df)
backfill_na(5)
head(na.df)
backfill_na <- function(interval) {
na.df[na.df$interval==interval,]$steps <<- interval2steps(interval)
}
foreach(i=1:length(intervals.df)) %do% backfill_na(intervals.df[i])
na.df
head(na.df)
backfill_na <- function(interval) {
na.df[na.df$interval==interval,]$steps <<- interval2steps(interval)
0
}
foreach(i=1:length(intervals.df)) %do% backfill_na(intervals.df[i])
backfill_na <- function(interval) {
na.df[na.df$interval==interval,]$steps <<- interval2steps(interval)
return
}
foreach(i=1:length(intervals.df)) %do% backfill_na(intervals.df[i])
backfill_na <- function(interval) {
na.df[na.df$interval==interval,]$steps <<- interval2steps(interval)
0
}
foreach(i=1:length(intervals.df)) %do% backfill_na(intervals.df[i])
backfilled.df < rbind(na.df, data.df)
backfilled.df <- rbind(na.df, data.df)
View(backfilled.df)
backfilled_by_date.df <- group_by(backfilled.df, date)
backfilled_by_date.df <- group_by(backfilled.df, date)
backfilled_by_date.summary <- summarise(backfilled_by_date.df, totsteps=sum(steps),nr=length(interval))
# plot histogram of ata
hist(backfilled_by_date.summary$totsteps,xlab="total daily steps", ylab="count")
# mean and median of daily total steps
backfilled_all_data.summary <- summarise(backfilled_by_date.summary, mean.steps = mean(totsteps),median.steps=median(totsteps))
# now create dataframe for daily activity pattern
backfilled_all_data.summary
all_data.summary
all_data.summary <- summarise(by_date.summary, mean.steps = mean(totsteps),median.steps=median(totsteps))
all_data.summary
weekdays(backfilled_by_date.df$date)
class(backfilled_by_date.df$date)
as.date(backfilled_by_date.df$date)
date(backfilled_by_date.df$date)
as.Date(backfilled_by_date.df$date)
data <- read.table(unz("activity.zip", "activity.csv"), nrows=17570, header=T, quote="\"", sep=",")
data$date <- as.Date(data$date)
library(ddplyr)
library(dplyr)
library(dplyr)
library(ggplot2)
# load data
data <- read.table(unz("activity.zip", "activity.csv"), nrows=17570, header=T, quote="\"", sep=",")
data$date <- as.Date(data$date)
# drop the NA's
data.df <- data[!is.na(data$steps),]
# summary
summary(data.df)
# now summarize data
# apply group_by and compute daily total steps
by_date.df <- group_by(data.df, date)
by_date.summary <- summarise(by_date.df, totsteps=sum(steps),nr=length(interval))
# plot histogram of ata
hist(by_date.summary$totsteps,xlab="total daily steps", ylab="count")
# mean and median of daily total steps
all_data.summary <- summarise(by_date.summary, mean.steps = mean(totsteps),median.steps=median(totsteps))
# now create dataframe for daily activity pattern
by_interval.df <- group_by(data.df, interval)
by_interval.summary <- summarise(by_interval.df, mean.steps=mean(steps))
plot(by_interval.summary$interval,by_interval.summary$mean.steps, type='l', xlab= "interval" , ylab="mean steps")
# find number of NA's
summary(data)
na.df <- data[is.na(data$steps),]
# now backfill NA's with mean of by_interval.df
interval2steps <- function(interval) {
by_interval.summary[by_interval.summary$interval==interval,]$mean.steps
}
backfill_na <- function(interval) {
na.df[na.df$interval==interval,]$steps <<- interval2steps(interval)
0
}
intervals.df <- unique(by_interval.df$interval)
foreach(i=1:length(intervals.df)) %do% backfill_na(intervals.df[i])
backfilled.df <- rbind(na.df, data.df)
# now create a table by date
backfilled_by_date.df <- group_by(backfilled.df, date)
backfilled_by_date.summary <- summarise(backfilled_by_date.df, totsteps=sum(steps),nr=length(interval))
# plot histogram of ata
hist(backfilled_by_date.summary$totsteps,xlab="total daily steps", ylab="count")
# mean and median of daily total steps
backfilled_all_data.summary <- summarise(backfilled_by_date.summary, mean.steps = mean(totsteps),median.steps=median(totsteps))
# now create dataframe for daily activity pattern
weekdays
weekdays(backfilled_by_date.df$date)
backfilled_by_date.df$wend <- as.factor(ifelse(weekday(backfilled_by_date.df$date) %in% c("Saturday","Sunday"), "weekend", "weekday"))
backfilled_by_date.df$wend <- as.factor(ifelse(weekdays(backfilled_by_date.df$date) %in% c("Saturday","Sunday"), "weekend", "weekday"))
View(backfilled_by_date.df)
summary(backfilled_by_date.df)
wday_by_interval.df <- group_by(backfilled.df[backfilled.df$wend=="weekday"], interval)
wday_by_interval.summary <- summarise(wday_by_interval.df, mean.steps=mean(steps))
wday_by_interval.df <- group_by(backfilled.df[backfilled.df$wend=="weekday",], interval)
wday_by_interval.summary <- summarise(wday_by_interval.df, mean.steps=mean(steps))
wday_by_interval.summary
wday_by_interval.df
backfilled.df[backfilled.df$wend=="weekday",]
backfilled.df
head(backfilled.df)
backfilled_by_date.df$wend <- as.factor(ifelse(weekdays(backfilled_by_date.df$date) %in% c("Saturday","Sunday"), "weekend", "weekday"))
backfilled_by_date.df
wday_by_interval.df <- group_by(backfilled_by_date.df[backfilled_by_date.df$wend=="weekday",], interval)
wday_by_interval.summary <- summarise(wday_by_interval.df, mean.steps=mean(steps))
View(wday_by_interval.summary)
wday_by_interval.summary$wend <- as.factor("weekday")
wend_by_interval.df <- group_by(backfilled_by_date.df[backfilled_by_date.df$wend=="weekend",], interval)
wend_by_interval.summary <- summarise(wend_by_interval.df, mean.steps=mean(steps))
wend_by_interval.summary$wend <- as.factor("weekend")
activity_by_interval.summary <- rbind(wday_by_interval.summary,wend_by_interval.summary)
View(activity_by_interval.summary)
xyplot(mean.steps~interval|wend,
main="Panel Plot by Week (day/end)",
ylab="Number of Steps", xlab="Interval", type='l')
library(lattice)
xyplot(mean.steps~interval|wend,
main="Panel Plot by Week (day/end)",
ylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary
main="Panel Plot by Week(day/end)",
ylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary
main="Panel Plot by Week",
ylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary )
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary )
ylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary,
ylab="Number of Steps", xlab="Interval", type='l')
tmp.trel <-xyplot(mean.steps~interval|wend, data=activity_by_interval.summary,
ylab="Number of Steps", xlab="Interval", type='l')
print(tmp.trel,  packet.panel = function(layout, row, column, ...) {
layout <- layout[c(2, 1, 3)]
packet.panel.default(layout = layout, row = column, column = row, ...)
})
tmp.trel
print(tmp.trel)
tmp.trel <-xyplot(mean.steps~interval|wend, data=activity_by_interval.summary,
ylab="Number of Steps", xlab="Interval", type='l',as.table=True)
print(tmp.trel,  packet.panel = function(layout, row, column, ...) {
layout <- layout[c(2, 1, 3)]
packet.panel.default(layout = layout, row = column, column = row, ...)
})
print(tmp.trel)
tmp.trel <-xyplot(mean.steps~interval|wend, data=activity_by_interval.summary,
ylab="Number of Steps", xlab="Interval", type='l', as.table=TRUE)
print(tmp.trel,  packet.panel = function(layout, row, column, ...) {
layout <- layout[c(2, 1, 3)]
packet.panel.default(layout = layout, row = column, column = row, ...)
})
print(tmp.trel)
tmp.trel <-xyplot(mean.steps~interval|wend, data=activity_by_interval.summary,
ylab="Number of Steps", xlab="Interval", type='l', as.table=TRUE)
print(tmp.trel,  packet.panel = function(layout, row, column, ...) {
layout <- layout[c(1, 2, 3)]
packet.panel.default(layout = layout, row = column, column = row, ...)
})
print(tmp.trel)
tmp.trel <-xyplot(mean.steps~interval|wend, data=activity_by_interval.summary,
ylab="Number of Steps", xlab="Interval", type='l', as.table=TRUE)
tmp.trel
tmp.trel <-xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUE,
ylab="Number of Steps", xlab="Interval", type='l')
tmp.trel
xyplot(mean.steps~interval|wend, data=activity_by_interval.s
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUE,
ylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUE, ylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUE)
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUE, ylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUE, ylab="Number of Steps", xlab="Interval", type='l')
tmp.trel
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUE, ylab="Number of Steps", xlab="Interval", type='l')
activity_by_interval.summary <- rbind(wday_by_interval.summary,wend_by_interval.summary)
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUE, ylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, ylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUEylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUEylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUE,ylab="Number of Steps", xlab="Interval", type='l')
xyplot(mean.steps~interval|wend, data=activity_by_interval.summary, as.table=TRUE,ylab="Number of Steps", xlab="Interval", type='l')
maxsteps <- max(by_interval.summary$mean.steps)
maxsteps
by_interval.summary[by_interval.summary$mean.steps==maxsteps,]$interval
835/5
backfilled.df <- rbind(na.df, data.df)
```
summary(data)
na.df <- data[is.na(data$steps),]
# now backfill NA's with mean of by_interval.df
interval2steps <- function(interval) {
by_interval.summary[by_interval.summary$interval==interval,]$mean.steps
}
backfill_na <- function(interval) {
na.df[na.df$interval==interval,]$steps <<- interval2steps(interval)
0
}
intervals.df <- unique(by_interval.df$interval)
foreach(i=1:length(intervals.df)) %do% backfill_na(intervals.df[i])
backfilled.df <- rbind(na.df, data.df)
# now create a table by date
backfilled_by_date.df <- group_by(backfilled.df, date)
backfilled_by_date.summary <- summarise(backfilled_by_date.df, totsteps=sum(steps),nr=length(interval))
# plot histogram of data
hist(backfilled_by_date.summary$totsteps,xlab="total daily steps", ylab="count")
# mean and median of daily total steps
backfilled_all_data.summary <- summarise(backfilled_by_date.summary, mean.steps = mean(totsteps),median.steps=median(totsteps))
# now create dataframe for weekend/weekday activity pattern
backfilled_by_date.df$wend <- as.factor(ifelse(weekdays(backfilled_by_date.df$date) %in% c("Saturday","Sunday"), "weekend", "weekday"))
knit2html()
